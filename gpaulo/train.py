#!/usr/bin/env python
# -*- coding: utf-8 -*-

import math
from os.path import dirname, abspath, join
import numpy as np


# strategy data
FIXES = np.array([
    # center start
    [[0,0,0, 0,-1,0, 0,0,0], [0,0,0, 0,0,0, 0,0,1]],
    [[0,0,-1, 0,1,0, 0,0,0], [1,0,0, 0,0,0, 0,0,1]],
    [[1,0,-1, 0,1,0, 0,0,-1], [0,0,0, 0,0,1, 0,0,0]],
    [[1,0,-1, -1,1,1, 0,0,-1], [0,0,0, 0,0,0, 0,1,0]],

    # my strategy (classic)
    [[0,0,0, 0,-1,0, 1,0,0], [0,0,1, 0,0,0, 0,0,0]],
    [[0,0,1, 0,-1,0, 1,0,-1], [1,0,0, 0,0,0, 0,0,0]],
    [[-1,0,1, 0,-1,0, 1,0,0], [0,0,0, 0,0,0, 0,0,1]],

    [[1,0,1, -1,-1,0, 1,0,-1], [0,1,0, 0,0,0, 0,0,0]],
    [[1,-1,1, 0,-1,0, 1,0,-1], [0,0,0, 1,0,0, 0,0,0]],
    [[-1,0,1, 0,-1,-1, 1,0,1], [0,0,0, 0,0,0, 0,1,0]],
    [[-1,0,1, 0,-1,0, 1,-1,1], [0,0,0, 0,0,1, 0,0,0]],

    # my strategy (reverse corner)
    [[0,0,-1, 0,0,0, 1,0,0], [1,0,0, 0,0,0, 0,0,1]],
    [[1,0,-1, -1,0,0, 1,0,0], [0,0,0, 0,0,0, 0,0,1]],
    [[0,0,-1, 0,0,0, 1,-1,1], [1,0,0, 0,0,0, 0,0,0]],

    [[1,0,-1, -1,0,0, 1,-1,1], [0,0,0, 1,1,0, 0,0,0]],
    [[1,0,-1, 0,-1,0, 1,-1,1], [0,0,0, 1,1,0, 0,0,0]],
    [[1,0,-1, -1,0,0, 1,-1,1], [0,0,0, 0,1,0, 0,1,0]],
    [[1,0,-1, -1,-1,0, 1,0,1], [0,0,0, 0,1,0, 0,1,0]],

    # my strategy (another corners)
    [[0,0,0, 0,0,0, 1,0,-1], [0,0,1, 0,0,0, 0,0,0]],
    [[-1,0,0, 0,0,0, 1,0,0], [0,0,1, 0,0,0, 0,0,0]],
    [[-1,0,1, 0,-1,0, 1,0,0], [0,0,0, 0,0,0, 0,0,1]],
    [[0,0,1, 0,-1,0, 1,0,-1], [1,0,0, 0,0,0, 0,0,0]],

    [[1,-1,1, 0,-1,0, 1,0,-1], [0,0,0, 1,0,0, 0,0,0]],
    [[1,0,1, -1,-1,0, 1,0,-1], [0,1,0, 0,0,0, 0,0,0]],
    [[-1,0,1, 0,-1,-1, 1,0,1], [0,0,0, 0,0,0, 0,1,0]],
    [[-1,0,1, 0,-1,0, 1,-1,1], [0,0,0, 0,0,1, 0,0,0]],

    [[-1,-1,1, 0,0,0, 1,0,0], [0,0,0, 0,1,0, 0,0,0]],
    [[-1,0,1, 0,0,0, 1,0,-1], [0,0,0, 0,1,0, 0,0,0]],
    
    # my strategy (another cells)
    [[0,0,0, 0,0,0, 1,-1,0], [0,0,0, 0,1,0, 0,0,0]],
    [[0,0,0, 0,0,-1, 1,0,0], [0,0,0, 0,1,0, 0,0,0]],
    [[0,0,0, -1,0,0, 1,0,0], [0,0,0, 0,1,0, 0,0,0]],
    [[0,-1,0, 0,0,0, 1,0,0], [0,0,0, 0,1,0, 0,0,0]],

    [[0,0,-1, 0,1,0, 1,-1,0], [1,0,0, 0,0,0, 0,0,0]],
    [[0,0,-1, 0,1,-1, 1,0,0], [0,0,0, 0,0,0, 0,0,1]],
    [[0,0,-1, -1,1,0, 1,0,0], [0,0,0, 0,0,0, 0,0,1]],
    [[0,-1,-1, 0,1,0, 1,0,0], [1,0,0, 0,0,0, 0,0,0]],

    [[1,0,-1, -1,1,0, 1,-1,0], [0,0,0, 0,0,0, 0,0,1]],
    [[1,-1,-1, -1,1,0, 1,0,0], [0,0,0, 0,0,0, 0,0,1]],
    [[1,0,-1, 0,1,0, 1,-1,-1], [0,0,0, 1,0,0, 0,0,0]],
    [[1,-1,-1, 0,1,0, 1,0,-1], [0,0,0, 1,0,0, 0,0,0]],
    [[-1,0,-1, 0,1,-1, 1,0,1], [0,0,0, 0,0,0, 0,1,0]],
    [[-1,0,-1, -1,1,0, 1,0,1], [0,0,0, 0,0,0, 0,1,0]],
    [[0,0,-1, 0,1,-1, 1,-1,1], [1,0,0, 0,0,0, 0,0,0]],
    [[0,0,-1, -1,1,0, 1,-1,1], [1,0,0, 0,0,0, 0,0,0]],

    # some fixes
    [[1,0,0,-1,1,0,-1,0,-1], [0,0,0,0,0,0,0,1,0]],
    [[0,0,0,-1,-1,0,0,0,1], [0,0,0,0,0,1,0,0,0]],
    [[1,-1,-1, 0,1,0, 0,0,-1], [0,0,0,0,0,1,0,0,0]],
    [[0,0,0, -1,1,0, -1,1,0], [1,0,0, 0,0,0, 0,0,0]],
    [[0,-1,-1, 0,1,0, 1,0,0], [1,0,0, 0,0,0, 0,0,0]],
    [[0,0,1, 0,1,-1, -1,0,-1], [0,0,0, 0,0,0, 0,1,0]],
    [[0,0,-1, 0,1,-1, 1,-1,0], [0,0,0, 0,0,0, 0,0,1]],
    [[0,0,0, 0,-1,-1, 0,0,1], [0,0,0, 1,0,0, 0,0,0]],

    # counter strategy
    [[0,0,0, 0,0,0, -1,0,0], [0,0,0, 0,1,0, 0,0,0]],
    [[0,0,-1, 0,0,0, 0,0,0], [0,0,0, 0,1,0, 0,0,0]],
    [[-1,0,0, 0,0,0, 0,0,0], [0,0,0, 0,1,0, 0,0,0]],
    [[0,0,0, 0,0,0, 0,0,-1], [0,0,0, 0,1,0, 0,0,0]],

    [[-1,0,0, 0,1,0, 0,0,-1], [0,1,0, 1,0,1, 0,1,0]],
    [[0,0,-1, 0,1,0, -1,0,0], [0,1,0, 1,0,1, 0,1,0]],

    [[-1,1,0, 0,1,0, 0,-1,-1], [0,0,0, 0,0,0, 1,0,0]],
    [[-1,0,0, 1,1,-1, 0,0,-1], [0,0,1, 0,0,0, 0,0,0]],
    [[-1,0,0, -1,1,1, 0,0,-1], [0,0,0, 0,0,0, 1,0,0]],
    [[-1,-1,0, 0,1,0, 0,1,-1], [0,0,1, 0,0,0, 0,0,0]],

    [[-1,1,-1, 0,1,0, 1,-1,-1], [0,0,0, 0,0,1, 0,0,0]],
    [[-1,0,1, 1,1,-1, -1,0,-1], [0,0,0, 0,0,0, 0,1,0]],
    [[-1,0,-1, -1,1,1, 1,0,-1], [0,1,0, 0,0,0, 0,0,0]],
    [[-1,-1,1, 0,1,0, -1,1,-1], [0,0,0, 1,0,0, 0,0,0]],

    # counter strategy (weird)
    [[0,0,0, 0,1,-1, -1,0,0], [0,0,0, 0,0,0, 0,0,1]],
    [[-1,0,0, 0,1,-1, 0,0,0], [0,0,1, 0,0,0, 0,0,0]],
    [[0,0,0, 0,1,-1, -1,0,0], [0,0,0, 0,0,0, 0,0,1]],
    [[-1,0,0, 0,1,-1, 0,0,0], [0,0,1, 0,0,0, 0,0,0]],

    # center start
    [[-1,-1,1, 1,-1,-1, 0,0,1], [0,0,0, 0,0,0, 0,1,0]],
    [[-1,-1,1, 1,-1,-1, 0,0,1], [0,0,0, 0,0,0, 0,1,0]],
])

NORMAL = np.load(join(dirname(abspath(__file__)), "..", "data", "tictactoe.npz"))["data"]

def load_data(random_test=False):
    # training data
    data = np.concatenate((NORMAL,) + ((FIXES,) * 150))
    np.random.shuffle(data)
    train = np.copy(data)

    # test data
    nval = math.ceil(data.shape[0] * .1)
    test = data[:nval]
    np.random.shuffle(data)

    if not random_test:
        # with strategy data
        nval -= test.shape[0]
        test = np.copy(FIXES)

        # add more data
        if nval > 0:
            test = np.concatenate((test, data[:nval]))

    # return results
    np.random.shuffle(test)
    return  (train[:, 0], train[:, 1], test[:, 0], test[:, 1])
